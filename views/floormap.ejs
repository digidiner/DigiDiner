<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <title>Restaurant Floor Map</title>
    <link rel="stylesheet" href="/css/bootstrap.min.css">
    <style>
        .table-cell {
            width: 200px;
            height: 200px;
            border: 6px inset #ccc;
            display: flex;
            align-items: center;
            justify-content: center;
            cursor: pointer;
            box-shadow: 4px 4px 4px rgba(0, 0, 0, 0.1);
            /* Added box shadow */
            margin-bottom: 20px;
            margin-right: 20px;
            /* Added padding between tables in the columns */
        }

        .table-unoccupied {
            background-color: rgba(128, 128, 128, 0.582);
            /* Highlight unoccupied table with grey */
        }

        .table-occupied {
            background-color: rgba(0, 128, 0, 0.582);
            /* Highlight occupied table with green */
        }

        .table-dirty {
            background-color: rgb(179, 40, 40, 0.582);
            /* Highlight dirty table with red */
        }

        .table-grid {
            display: flex;
            flex-wrap: wrap;
            justify-content: center;
        }

        .table-grid .row {
            display: flex;
            justify-content: center;
            margin-bottom: 10px;
            margin-right: 20px;
            /* Added margin-bottom between rows */
        }
    </style>
</head>


<body>
    <header>
        <%- include('partials/head') %>
    </header>
    <main>
        <div class="container-fluid">
            <h1 class="mt-4 mb-4 text-center">Main Dining Room</h1>
            <div class="row">
                <div class="col-md-8 center-content">
                    <div class="table-grid" id="tableGrid"></div>
                </div>
            </div>
            <div class="col-md-4">
                <button class="btn btn-primary" data-toggle="modal" data-target="#newTableModal"
                    id="createTableButton">Create New Table</button>
                <button class="btn btn-primary" data-toggle="modal" data-target="#updateStatusModal">Update
                    Status</button>
            </div>

            <!-- Order Modal -->
            <div class="modal fade" id="orderModal" tabindex="-1" role="dialog" aria-labelledby="orderModalTitle"
                aria-hidden="true">
                <div class="modal-dialog" role="document">
                    <div class="modal-content">
                        <div class="modal-header">
                            <h5 class="modal-title" id="orderModalTitle">Order for Table <span id="orderTableId"></span>
                            </h5>
                            <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                                <span aria-hidden="true">&times;</span>
                            </button>
                        </div>
                        <div class="modal-body">

                        </div>
                    </div>
                </div>
            </div>

            <!-- Menu Modal -->
            <div class="modal fade" id="menuModal" tabindex="-1" role="dialog" aria-labelledby="menuModalTitle"
                aria-hidden="true">
                <div class="modal-dialog" role="document">
                    <div class="modal-content">
                        <div class="modal-header">
                            <h5 class="modal-title" id="menuModalTitle">Table: <span id="menuTableId"></span>
                            </h5>
                            <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                                <span aria-hidden="true">&times;</span>
                            </button>
                        </div>
                        <div class="modal-body">
                            <%- include('partials/menu') %>
                        </div>
                    </div>
                </div>
            </div>

            <!-- Final Bill Modal -->
            <div class="modal fade" id="finalBillModal" tabindex="-1" role="dialog"
                aria-labelledby="finalBillModalTitle" aria-hidden="true">
                <div class="modal-dialog" role="document">
                    <div class="modal-content">
                        <div class="modal-header">
                            <h5 class="modal-title" id="finalBillModalTitle">Final Bill for Table <span
                                    id="finalBillTableId"></span></h5>
                            <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                                <span aria-hidden="true">&times;</span>
                            </button>
                        </div>
                        <div class="modal-body">

                        </div>
                    </div>
                </div>
            </div>

            <!-- Update Status Modal -->
            <div class="modal fade" id="updateStatusModal" tabindex="-1" role="dialog"
                aria-labelledby="updateStatusModalTitle" aria-hidden="true">
                <div class="modal-dialog" role="document">
                    <div class="modal-content">
                        <div class="modal-header">
                            <h5 class="modal-title" id="updateStatusModalTitle">Update Table Status</h5>
                            <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                                <span aria-hidden="true">&times;</span>
                            </button>
                        </div>
                        <div class="modal-body">
                            <div class="form-group">
                                <label>Select Status:</label><br>
                                <div class="form-check">
                                    <input class="form-check-input" type="checkbox" value="dirty" id="statusDirty">
                                    <label class="form-check-label" for="statusDirty">
                                        Dirty
                                    </label>
                                </div>
                                <div class="form-check">
                                    <input class="form-check-input" type="checkbox" value="occupied"
                                        id="statusOccupied">
                                    <label class="form-check-label" for="statusOccupied">
                                        Occupied
                                    </label>
                                </div>
                                <div class="form-check">
                                    <input class="form-check-input" type="checkbox" value="unoccupied"
                                        id="statusUnoccupied">
                                    <label class="form-check-label" for="statusUnoccupied">
                                        Unoccupied
                                    </label>
                                </div>
                            </div>
                        </div>
                        <div class="modal-footer">
                            <button type="button" class="btn btn-secondary" data-dismiss="modal">Cancel</button>
                            <button type="button" class="btn btn-primary" onclick="saveTableStatus()">Save</button>
                        </div>
                    </div>
                </div>
            </div>

            <!-- New Table Modal (only accessible for managers) -->
            <div class="modal fade" id="newTableModal" tabindex="-1" role="dialog" aria-labelledby="newTableModalTitle"
                aria-hidden="true">
                <div class="modal-dialog" role="document">
                    <div class="modal-content">
                        <div class="modal-header">
                            <h5 class="modal-title" id="newTableModalTitle">Create New Table</h5>
                            <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                                <span aria-hidden="true">&times;</span>
                            </button>
                        </div>
                        <div class="modal-body">
                            <form id="newTableForm">
                                <div class="form-group">
                                    <label for="seatsInput">Number of Seats:</label>
                                    <input type="number" class="form-control" id="seatsInput" required>
                                </div>
                                <div class="form-group">
                                    <label for="posXInput">X Position:</label>
                                    <input type="number" class="form-control" id="posXInput" required>
                                </div>
                                <div class="form-group">
                                    <label for="posYInput">Y Position:</label>
                                    <input type="number" class="form-control" id="posYInput" required>
                                </div>
                            </form>
                        </div>
                        <div class="modal-footer">
                            <button type="button" class="btn btn-secondary" data-dismiss="modal">Cancel</button>
                            <button type="button" class="btn btn-primary" onclick="createNewTable()">Create</button>
                        </div>
                    </div>
                </div>
            </div>

        </div>
    </main>
    <footer>
        <%- include('partials/footer') %>
    </footer>
    <script src="/js/jquery.min.js"></script>
    <script src="/js/bootstrap.min.js"></script>
    <script>
        async function getEmployeeData() {
            const id = employee.id;
            const employeeId = req.session.id; // Function to retrieve the ID of the currently signed-in employee
            const employeeData = await (await fetch(window.location.origin + '/api/management/employee/' + employeeId, {
                method: 'GET'
            })).json();

            return employeeData.position;
        }

        async function populateTables() {
            // Fetch employee position of the currently signed-in user
            const position = await getEmployeeData();
            const isManager = position.includes("manager");

            // Check if the employee is a manager to display the button
            const createTableButton = document.getElementById('createTableButton');
            createTableButton.style.display = isManager ? 'block' : 'none';

            // Generate table grid
            const tableGrid = document.getElementById('tableGrid');
            tableGrid.innerHTML = ''; // Clear existing content

            // Fetch tables data from the API
            const tables = await (await fetch(window.location.origin + '/api/waitstaff/table/list', {
                method: 'GET'
            })).json();

            // Create a table cell element for each table
            tables.forEach((table) => {
                const tableCell = document.createElement('div');
                tableCell.className = `col-md-4 table-cell table-${table.status}`;
                tableCell.dataset.tableId = table.id;
                tableCell.dataset.status = table.status;
                tableCell.innerText = `Table ${table.id}`;

                tableGrid.appendChild(tableCell);
            });
        }

        // Call the populateTables function when the DOM is loaded
        document.addEventListener('DOMContentLoaded', () => {
            populateTables();

            // Add an event listener to the update status buttons
            const updateStatusButtons = document.querySelectorAll('.accordion-button');
            updateStatusButtons.forEach(button => {
                button.addEventListener('click', () => {
                    const tableElement = button.closest('.accordion-item');

                    // Get the table number and modal element
                    const tableNumber = tableElement.querySelector('.accordion-header button').textContent.trim();
                    const modal = document.getElementById('updateStatusModal');

                    // Set the table number in the modal
                    const modalTableNumber = modal.querySelector('.modal-title');
                    modalTableNumber.textContent = `Update Table Status: ${tableNumber}`;

                    // Show the modal
                    const bootstrapModal = new bootstrap.Modal(modal);
                    bootstrapModal.show();
                });
            });

            // Add an event listener to the status submit button
            const modalSubmitButton = document.querySelector('#updateStatusModal .modal-footer button.btn-primary');
            modalSubmitButton.addEventListener('click', () => {
                const statusDirty = document.querySelector('#statusDirty').checked;
                const statusOccupied = document.querySelector('#statusOccupied').checked;
                const statusUnoccupied = document.querySelector('#statusUnoccupied').checked;
                let status = '';
                if (statusDirty) {
                    status = 'dirty';
                } else if (statusOccupied) {
                    status = 'occupied';
                } else if (statusUnoccupied) {
                    status = 'unoccupied';
                }
                const modal = document.getElementById('updateStatusModal');
                const bootstrapModal = new bootstrap.Modal(modal);
                bootstrapModal.hide();
            });

            // Add click event listener to table cells
            $('.table-cell').on('click', function () {
                const tableId = $(this).data('table-id');
                const status = $(this).data('status');
                $('#selectedTable').text(tableId);
                $('#selectedTableStatus').text(status);
                if (status === 'occupied') {
                    $('#orderTableId').text(tableId);
                    $('#orderModal').modal('show');
                } else if (status === 'unoccupied') {
                    $('#menuTableId').text(tableId);
                    $('#menuModal').modal('show');
                } else if (status === 'dirty') {
                    $('#finalBillTableId').text(tableId);
                    $('#finalBillModal').modal('show');
                }
            });

            // Function to save table status
            function saveTableStatus() {
                // Variables for checkbox options
                const selectedTable = $('#selectedTable').text();
                const statusDirty = $('#statusDirty').is(':checked');
                const statusOccupied = $('#statusOccupied').is(':checked');
                const statusUnoccupied = $('#statusUnoccupied').is(':checked');

                // Check selection and set new status
                let status = '';
                if (statusDirty) {
                    status = 'dirty';
                } else if (statusOccupied) {
                    status = 'occupied';
                } else if (statusUnoccupied) {
                    status = 'unoccupied';
                }

                // Update the table status
                $(`.table-cell[data-table-id="${selectedTable}"]`).data('status', status);
                $(`.table-cell[data-table-id="${selectedTable}"]`).removeClass('table-occupied table-unoccupied table-dirty');

                // Add the corresponding class based on the updated status
                if (status === 'occupied') {
                    $(`.table-cell[data-table-id="${selectedTable}"]`).addClass('table-occupied');
                } else if (status === 'unoccupied') {
                    $(`.table-cell[data-table-id="${selectedTable}"]`).addClass('table-unoccupied');
                } else if (status === 'dirty') {
                    $(`.table-cell[data-table-id="${selectedTable}"]`).addClass('table-dirty');
                }

                // Update the selected table status and close modal
                $('#selectedTableStatus').text(status);
                $('#updateStatusModal').modal('hide');
            }
        });

        // Function to create a new table
        function createNewTable() {
            const seats = document.getElementById('seatsInput').value;
            const posX = document.getElementById('posXInput').value;
            const posY = document.getElementById('posYInput').value;

            fetch('/api/management/table', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify({ seats, posX, posY })
            })
                .then(response => response.json())
                .then(data => {
                    // Handle the response data as needed
                    console.log(data);
                    // Close the modal
                    const modal = document.getElementById('newTableModal');
                    const bootstrapModal = new bootstrap.Modal(modal);
                    bootstrapModal.hide();
                })
                .catch(error => {
                    // Handle the error appropriately
                    console.error(error);
                });
        }
    </script>
</body>

</html>